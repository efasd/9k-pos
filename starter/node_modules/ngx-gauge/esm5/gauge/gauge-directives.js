import { __decorate } from "tslib";
import { Directive } from "@angular/core";
var NgxGaugeAppend = /** @class */ (function () {
    function NgxGaugeAppend() {
    }
    NgxGaugeAppend = __decorate([
        Directive({
            selector: "ngx-gauge-append",
            exportAs: "ngxGaugeAppend"
        })
    ], NgxGaugeAppend);
    return NgxGaugeAppend;
}());
export { NgxGaugeAppend };
var NgxGaugePrepend = /** @class */ (function () {
    function NgxGaugePrepend() {
    }
    NgxGaugePrepend = __decorate([
        Directive({
            selector: "ngx-gauge-prepend",
            exportAs: "ngxGaugePrepend"
        })
    ], NgxGaugePrepend);
    return NgxGaugePrepend;
}());
export { NgxGaugePrepend };
var NgxGaugeValue = /** @class */ (function () {
    function NgxGaugeValue() {
    }
    NgxGaugeValue = __decorate([
        Directive({
            selector: "ngx-gauge-value",
            exportAs: "ngxGaugeValue"
        })
    ], NgxGaugeValue);
    return NgxGaugeValue;
}());
export { NgxGaugeValue };
var NgxGaugeLabel = /** @class */ (function () {
    function NgxGaugeLabel() {
    }
    NgxGaugeLabel = __decorate([
        Directive({
            selector: "ngx-gauge-label",
            exportAs: "ngxGaugeLabel"
        })
    ], NgxGaugeLabel);
    return NgxGaugeLabel;
}());
export { NgxGaugeLabel };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2F1Z2UtZGlyZWN0aXZlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1nYXVnZS8iLCJzb3VyY2VzIjpbImdhdWdlL2dhdWdlLWRpcmVjdGl2ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNMUM7SUFBQTtJQUE2QixDQUFDO0lBQWpCLGNBQWM7UUFKMUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGtCQUFrQjtZQUM1QixRQUFRLEVBQUUsZ0JBQWdCO1NBQzNCLENBQUM7T0FDVyxjQUFjLENBQUc7SUFBRCxxQkFBQztDQUFBLEFBQTlCLElBQThCO1NBQWpCLGNBQWM7QUFNM0I7SUFBQTtJQUE4QixDQUFDO0lBQWxCLGVBQWU7UUFKM0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLG1CQUFtQjtZQUM3QixRQUFRLEVBQUUsaUJBQWlCO1NBQzVCLENBQUM7T0FDVyxlQUFlLENBQUc7SUFBRCxzQkFBQztDQUFBLEFBQS9CLElBQStCO1NBQWxCLGVBQWU7QUFNNUI7SUFBQTtJQUE0QixDQUFDO0lBQWhCLGFBQWE7UUFKekIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixRQUFRLEVBQUUsZUFBZTtTQUMxQixDQUFDO09BQ1csYUFBYSxDQUFHO0lBQUQsb0JBQUM7Q0FBQSxBQUE3QixJQUE2QjtTQUFoQixhQUFhO0FBTTFCO0lBQUE7SUFBNEIsQ0FBQztJQUFoQixhQUFhO1FBSnpCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsUUFBUSxFQUFFLGVBQWU7U0FDMUIsQ0FBQztPQUNXLGFBQWEsQ0FBRztJQUFELG9CQUFDO0NBQUEsQUFBN0IsSUFBNkI7U0FBaEIsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogXCJuZ3gtZ2F1Z2UtYXBwZW5kXCIsXHJcbiAgZXhwb3J0QXM6IFwibmd4R2F1Z2VBcHBlbmRcIlxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4R2F1Z2VBcHBlbmQge31cclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiBcIm5neC1nYXVnZS1wcmVwZW5kXCIsXHJcbiAgZXhwb3J0QXM6IFwibmd4R2F1Z2VQcmVwZW5kXCJcclxufSlcclxuZXhwb3J0IGNsYXNzIE5neEdhdWdlUHJlcGVuZCB7fVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6IFwibmd4LWdhdWdlLXZhbHVlXCIsXHJcbiAgZXhwb3J0QXM6IFwibmd4R2F1Z2VWYWx1ZVwiXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hHYXVnZVZhbHVlIHt9XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogXCJuZ3gtZ2F1Z2UtbGFiZWxcIixcclxuICBleHBvcnRBczogXCJuZ3hHYXVnZUxhYmVsXCJcclxufSlcclxuZXhwb3J0IGNsYXNzIE5neEdhdWdlTGFiZWwge31cclxuIl19