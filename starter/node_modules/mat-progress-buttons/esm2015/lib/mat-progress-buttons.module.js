import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { MatSpinnerButtonComponent } from './component/spinner-button/spinner-button.component';
import { MatBarButtonComponent } from './component/bar-button/bar-button.component';
import { MatButtonModule } from '@angular/material/button';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatRippleModule } from '@angular/material/core';
import { MatIconModule } from '@angular/material/icon';
// Export module's public API
export { MatSpinnerButtonComponent } from './component/spinner-button/spinner-button.component';
export { MatBarButtonComponent } from './component/bar-button/bar-button.component';
export class MatProgressButtonsModule {
    static forRoot() {
        return {
            ngModule: MatProgressButtonsModule
        };
    }
}
MatProgressButtonsModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    MatButtonModule,
                    MatProgressBarModule,
                    MatProgressSpinnerModule,
                    MatRippleModule,
                    MatIconModule
                ],
                exports: [
                    MatSpinnerButtonComponent,
                    MatBarButtonComponent
                ],
                declarations: [
                    MatSpinnerButtonComponent,
                    MatBarButtonComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LXByb2dyZXNzLWJ1dHRvbnMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uL3Byb2plY3RzL21hdC1wcm9ncmVzcy1idXR0b25zL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9tYXQtcHJvZ3Jlc3MtYnV0dG9ucy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMzRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXZELDZCQUE2QjtBQUM3QixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUNoRyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQXFCcEYsTUFBTSxPQUFPLHdCQUF3QjtJQUNuQyxNQUFNLENBQUMsT0FBTztRQUNaLE9BQU87WUFDTCxRQUFRLEVBQUUsd0JBQXdCO1NBQ25DLENBQUM7SUFDSixDQUFDOzs7WUF2QkYsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLGVBQWU7b0JBQ2Ysb0JBQW9CO29CQUNwQix3QkFBd0I7b0JBQ3hCLGVBQWU7b0JBQ2YsYUFBYTtpQkFDZDtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AseUJBQXlCO29CQUN6QixxQkFBcUI7aUJBQ3RCO2dCQUNELFlBQVksRUFBRTtvQkFDWix5QkFBeUI7b0JBQ3pCLHFCQUFxQjtpQkFDdEI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBNYXRTcGlubmVyQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnQvc3Bpbm5lci1idXR0b24vc3Bpbm5lci1idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7IE1hdEJhckJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2Jhci1idXR0b24vYmFyLWJ1dHRvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWF0QnV0dG9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvYnV0dG9uJztcbmltcG9ydCB7IE1hdFByb2dyZXNzQmFyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyJztcbmltcG9ydCB7IE1hdFByb2dyZXNzU3Bpbm5lck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXInO1xuaW1wb3J0IHsgTWF0UmlwcGxlTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XG5pbXBvcnQgeyBNYXRJY29uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5cbi8vIEV4cG9ydCBtb2R1bGUncyBwdWJsaWMgQVBJXG5leHBvcnQgeyBNYXRTcGlubmVyQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnQvc3Bpbm5lci1idXR0b24vc3Bpbm5lci1idXR0b24uY29tcG9uZW50JztcbmV4cG9ydCB7IE1hdEJhckJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2Jhci1idXR0b24vYmFyLWJ1dHRvbi5jb21wb25lbnQnO1xuZXhwb3J0IHsgTWF0UHJvZ3Jlc3NCdXR0b25PcHRpb25zIH0gZnJvbSAnLi9tYXQtcHJvZ3Jlc3MtYnV0dG9ucy5pbnRlcmZhY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIE1hdEJ1dHRvbk1vZHVsZSxcbiAgICBNYXRQcm9ncmVzc0Jhck1vZHVsZSxcbiAgICBNYXRQcm9ncmVzc1NwaW5uZXJNb2R1bGUsXG4gICAgTWF0UmlwcGxlTW9kdWxlLFxuICAgIE1hdEljb25Nb2R1bGVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE1hdFNwaW5uZXJCdXR0b25Db21wb25lbnQsXG4gICAgTWF0QmFyQnV0dG9uQ29tcG9uZW50XG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE1hdFNwaW5uZXJCdXR0b25Db21wb25lbnQsXG4gICAgTWF0QmFyQnV0dG9uQ29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTWF0UHJvZ3Jlc3NCdXR0b25zTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxNYXRQcm9ncmVzc0J1dHRvbnNNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IE1hdFByb2dyZXNzQnV0dG9uc01vZHVsZVxuICAgIH07XG4gIH1cbn1cbiJdfQ==